name: Process Telegram Updates

on:
  repository_dispatch:
    types: [telegram-update]

jobs:
  update-website:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Add Update
        run: |
          # Create updates directory if it doesn't exist
          mkdir -p updates
          
          # Create the update file with timestamp as name
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "${{ github.event.client_payload.content }}" > "updates/${TIMESTAMP}.txt"
          
          # Update index.html with the new content
          python - <<EOF
          import os
          from datetime import datetime
          import re
          
          def rebuild_updates_section():
              with open('index.html', 'r', encoding='utf-8') as f:
                  content = f.read()
              
              # Find the updates section
              section_start = content.find('<section id="updates"')
              if section_start == -1:
                  print("Could not find updates section")
                  return
                  
              section_end = content.find('</section>', section_start) + len('</section>')
              
              # Create new update
              new_update = {
                  'content': "${{ github.event.client_payload.content }}",
                  'date': "${{ github.event.client_payload.date }}"
              }
              
              # Find all existing updates
              updates_pattern = r'<p class="card-text">(.*?)</p>\s*<p class="card-text"><small class="text-muted">Posted on (.*?)</small></p>'
              existing_updates = re.findall(updates_pattern, content, re.DOTALL)
              
              # Add new update to the list
              all_updates = [(new_update['content'], new_update['date'])] + existing_updates
              
              # Keep only the 3 most recent updates
              recent_updates = all_updates[:3]
              
              # Create the new updates section
              new_section = f'''
    <section id="updates" class="bg-light py-5">
        <div class="container">
            <h2 class="text-center mb-5">Latest Updates</h2>
            <div class="updates-list">'''
              
              # Add each update
              for update_content, update_date in recent_updates:
                  new_section += f'''
                <div class="update-item mb-4">
                    <div class="card">
                        <div class="card-body">
                            <p class="card-text">{update_content}</p>
                            <p class="card-text"><small class="text-muted">Posted on {update_date}</small></p>
                        </div>
                    </div>
                </div>'''
              
              new_section += '''
            </div>
        </div>
    </section>'''
              
              # Replace the old section with the new one
              new_content = content[:section_start] + new_section + content[section_end:]
              
              # Write the updated content back to the file
              with open('index.html', 'w', encoding='utf-8') as f:
                  f.write(new_content)
              
              print("Successfully rebuilt updates section")
          
          rebuild_updates_section()
          EOF
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add updates/ index.html
          git commit -m "Add update from Telegram: ${{ github.event.client_payload.content }}"
          git push
