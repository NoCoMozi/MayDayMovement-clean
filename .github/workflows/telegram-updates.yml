name: Process Telegram Updates

on:
  repository_dispatch:
    types: [telegram-update]

jobs:
  update-website:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install BeautifulSoup
        run: pip install beautifulsoup4
          
      - name: Add Update
        run: |
          # Create updates directory if it doesn't exist
          mkdir -p updates
          
          # Create the update file with timestamp as name
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "${{ github.event.client_payload.content }}" > "updates/${TIMESTAMP}.txt"
          
          # Update index.html with the new content
          python - <<EOF
          import os
          from datetime import datetime
          import re
          from bs4 import BeautifulSoup
          
          def rebuild_updates_section():
              with open('index.html', 'r', encoding='utf-8') as f:
                  content = f.read()
              
              # Parse HTML
              soup = BeautifulSoup(content, 'html.parser')
              
              # Find the updates section
              updates_section = soup.find('section', id='updates')
              if not updates_section:
                  print("Could not find updates section")
                  return
              
              # Find all update items
              updates_list = updates_section.find('div', class_='updates-list')
              if not updates_list:
                  print("Could not find updates list")
                  return
                  
              # Create new update
              new_update = soup.new_tag('div', attrs={'class': 'update-item mb-4'})
              card = soup.new_tag('div', attrs={'class': 'card'})
              card_body = soup.new_tag('div', attrs={'class': 'card-body'})
              
              # Add content
              content_p = soup.new_tag('p', attrs={'class': 'card-text'})
              content_p.string = "${{ github.event.client_payload.content }}"
              
              date_p = soup.new_tag('p', attrs={'class': 'card-text'})
              date_small = soup.new_tag('small', attrs={'class': 'text-muted'})
              date_small.string = f"Posted on ${{ github.event.client_payload.date }}"
              date_p.append(date_small)
              
              card_body.append(content_p)
              card_body.append(date_p)
              card.append(card_body)
              new_update.append(card)
              
              # Get all existing updates
              existing_updates = updates_list.find_all('div', class_='update-item')
              
              # Clear the updates list
              updates_list.clear()
              
              # Add new update first
              updates_list.append(new_update)
              
              # Add next 2 most recent updates
              for update in existing_updates[:2]:
                  updates_list.append(update)
              
              # Write the updated content back to the file
              with open('index.html', 'w', encoding='utf-8') as f:
                  f.write(str(soup.prettify()))
              
              print("Successfully rebuilt updates section")
          
          rebuild_updates_section()
          EOF
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add updates/ index.html
          git commit -m "Add update from Telegram: ${{ github.event.client_payload.content }}"
          git push
          
      - name: Trigger GitHub Pages rebuild
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/NoCoMozi/MayDayMovement-clean/pages/builds
