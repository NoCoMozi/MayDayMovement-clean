name: Process Telegram Updates

on:
  repository_dispatch:
    types: [telegram-update]

jobs:
  update-website:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Add Update
        run: |
          # Create updates directory if it doesn't exist
          mkdir -p updates
          
          # Create the update file with timestamp as name
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "${{ github.event.client_payload.content }}" > "updates/${TIMESTAMP}.txt"
          
          # Update index.html with the new content
          python - <<EOF
          import os
          import glob
          from datetime import datetime
          
          def get_latest_updates():
              # Get all update files sorted by timestamp (newest first)
              update_files = sorted(glob.glob('updates/*.txt'), reverse=True)
              
              # Get content and dates for the 3 most recent updates
              updates = []
              for file in update_files[:3]:
                  with open(file, 'r', encoding='utf-8') as f:
                      content = f.read().strip()
                  # Get date from filename (YYYYmmdd_HHMMSS)
                  timestamp = os.path.basename(file).replace('.txt', '')
                  date = datetime.strptime(timestamp, '%Y%m%d_%H%M%S')
                  date_str = date.strftime('%Y-%m-%d %H:%M')
                  updates.append({
                      'content': content,
                      'date': date_str
                  })
              return updates
          
          def create_updates_section():
              updates = get_latest_updates()
              
              # Create the updates section HTML
              updates_html = '''
    <section id="updates" class="bg-light py-5">
        <div class="container">
            <h2 class="text-center mb-5">Latest Updates</h2>
            <div class="updates-list">'''
              
              # Add each update
              for update in updates:
                  updates_html += f'''
                <div class="update-item mb-4">
                    <div class="card">
                        <div class="card-body">
                            <p class="card-text">{update['content']}</p>
                            <p class="card-text"><small class="text-muted">Posted on {update['date']}</small></p>
                        </div>
                    </div>
                </div>'''
              
              updates_html += '''
            </div>
        </div>
    </section>'''
              
              return updates_html
          
          def update_index_html():
              # Read the current index.html
              with open('index.html', 'r', encoding='utf-8') as f:
                  content = f.read()
              
              # Find the updates section boundaries
              start = content.find('<section id="updates"')
              if start == -1:
                  print("Could not find updates section")
                  return
              
              end = content.find('</section>', start) + len('</section>')
              
              # Create the new updates section
              new_updates = create_updates_section()
              
              # Replace the old section with the new one
              new_content = content[:start] + new_updates + content[end:]
              
              # Write the updated content back to the file
              with open('index.html', 'w', encoding='utf-8') as f:
                  f.write(new_content)
              
              print("Successfully updated index.html")
          
          update_index_html()
          EOF
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add updates/ index.html
          git commit -m "Add update from Telegram: ${{ github.event.client_payload.content }}"
          git push
          
      - name: Trigger GitHub Pages rebuild
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/NoCoMozi/MayDayMovement-clean/pages/builds
